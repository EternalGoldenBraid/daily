
In general, you have database under password so no one can access it without it. If you really want an additional level of security on the database level you could encrypt data that is in there if the database has some additional options available. Make sure you use an encrypted connection to the database (check for appropriate libraries or protocols). 

Alternatively, you could write in already encrypted data and then decrypt it on the application level. So when you enter it into your application you encrypt it and before you display it you decrypt it. This way you don't have to bother with all the database or connection encryption and might be easier to do but you will always have to specify the key and you won't be able to change it.

All that was said aside, probably the easiest way of doing it is:
-use database with the normal password system
-have a website that uses TLS (or some other secure protocol) for connection to the database
-make sure that the website uses HTTPS (normal HTTP will just transmit everything in plain text)
-when you enter the site you have to enter the password - this password is then checked in the database (pretty much a login, make sure you store hashed passwords with salt)
-make either some form of IP or user locking if you enter the wrong password too many times or only allow 1 login attempt every X minutes (so that they can't brute force your login system)
-if you add an additional column to your data about the user you could have the same app for multiple users
-open website on your phone or computer and login
-if you want to have a dedicated phone/computer app you could 1) encapsulate a website into an app or 2) directly connect to the database using an encrypted connection. Option 2 is very easy to do but is less portable than the website.

What are my requirements for webhost:

1. Monthly budget: less than 20eur/month
2. Monthly unique traffic: 2 visitors/month
3. Technology requirements: SQLite, Python, Flask, Javascript
4. Tecnical ability: I've never bought web hosting before
5. Location: Europe
